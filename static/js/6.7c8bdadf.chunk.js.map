{"version":3,"file":"static/js/6.7c8bdadf.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts.selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  padding: 15px;\n  border: 3px solid #679173;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  label {\n    width: 100%;\n  }\n  .title {\n    font-size: 32px;\n    font-weight: 500;\n  }\n  .text {\n    font-size: 20px;\n    text-align: start;\n  }\n  .input {\n    width: 100%;\n    font-size: 30px;\n  }\n  button {\n    width: 100%;\n    display: block;\n    margin-top: 15px;\n    color: #6d7e86;\n    font-size: 20px;\n    padding: 10px;\n    background-color: #dddddd;\n    border: 2px solid #679173;\n    border-radius: 10px;\n    transition: all 0.3s;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #bebecf;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 8px;\n  margin-bottom: 8px;\n\n  span {\n    font-size: 26px;\n    font-weight: 400;\n  }\n  .wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 14px;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  cursor: pointer;\n  color: #6d7e86;\n  background-color: #dddddd;\n  border: 2px solid #679173;\n  border-radius: 10px;\n  transition: all 0.3s;\n  font-size: 20px;\n  padding: 10px;\n  &:hover {\n    background-color: #bebecf;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts.reducer';\nimport { ContactItem, ButtonDelete } from './ContactListItem.styled';\nimport Notiflix from 'notiflix';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n    Notiflix.Notify.failure(`You delete contact`);\n  };\n\n  return (\n    <ContactItem>\n      <span>{contact.name}: </span>{' '}\n      <div className=\"wrapper\">\n        <span>{contact.number}</span>\n\n        <ButtonDelete\n          type=\"button\"\n          onClick={() => handleDeleteContact(contact.id)}\n        >\n          Delete\n        </ButtonDelete>\n      </div>\n    </ContactItem>\n  );\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const StyledContactList = styled.ul`\n  margin: 10px 0px;\n  padding: 15px;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/contacts.selectors';\nimport { StyledContactList } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filterContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <StyledContactList>\n      {filterContacts.map(contact => {\n        return <ContactListItem key={contact.id} contact={contact} />;\n      })}\n    </StyledContactList>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterStyle = styled.div`\n  padding-left: 15px;\n  padding-right: 15px;\n  input {\n    font-size: 30px;\n    width: 100%;\n  }\n  h2 {\n    text-align: start;\n    font-size: 25px;\n    font-weight: 500;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterStyle } from './Filter.styled';\nimport { addContactsFilter } from 'redux/contacts/contacts.reducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleInputFilterChange = evt => {\n    const filterValue = evt.target.value;\n    dispatch(addContactsFilter(filterValue));\n  };\n  return (\n    <FilterStyle>\n      <h2>Find contacts by name</h2>\n      <input type=\"text\" onChange={handleInputFilterChange} />\n    </FilterStyle>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts.reducer';\nimport { FormStyle } from './Form.styled';\nimport { selectContacts } from 'redux/contacts/contacts.selectors';\nimport Notiflix from 'notiflix';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const createContact = evt => {\n    evt.preventDefault();\n\n    const name = evt.currentTarget.elements.contactName.value;\n    const number = evt.currentTarget.elements.contactNumber.value;\n\n    const formData = {\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === formData.name)) {\n      Notiflix.Notify.failure(`${formData.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(formData))\n      .unwrap()\n      .then(() => evt.target.reset());\n    Notiflix.Notify.success(`You add new contact`);\n  };\n\n  return (\n    <div>\n      <FormStyle onSubmit={createContact}>\n        <h2 className=\"title\">Add new contact</h2>\n        <label>\n          <p className=\"text\">Name</p>\n          <input className=\"input\" type=\"text\" name=\"contactName\" required />\n        </label>\n        <label>\n          <p className=\"text\">Phone</p>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"contactNumber\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            placeholder=\"XXX-XX-XX\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </FormStyle>\n    </div>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Form } from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contacts.reducer';\nimport {\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contacts.selectors';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <p>{error}</p>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FormStyle","styled","ContactItem","ButtonDelete","ContactListItem","contact","dispatch","useDispatch","name","className","number","type","onClick","contactId","id","deleteContact","Notiflix","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","toLowerCase","includes","StyledContactList","ContactList","filterContacts","useSelector","FilterStyle","Filter","onChange","evt","filterValue","target","addContactsFilter","Form","onSubmit","preventDefault","formData","currentTarget","elements","contactName","contactNumber","some","addContact","unwrap","then","reset","required","pattern","placeholder","useEffect","fetchContacts","Loader"],"sourceRoot":""}